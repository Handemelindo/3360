#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// mouse move settings

#define MMV_U MOVE_VERT(-650)
#define MMV_D MOVE_VERT(650)
#define MMV_L MOVE_HOR(-650)
#define MMV_R MOVE_HOR(650)

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
};

// mouse wheel settings

#define MWH_U SCROLL_VERT(15)
#define MWH_D SCROLL_VERT(-15)
#define MWH_L SCROLL_HOR(-15)
#define MWH_R SCROLL_HOR(15)

&mwh {
    time-to-max-speed-ms = <2000>;
    acceleration-exponent = <0>;
};

#define DEFAULT 0
#define NUMBER  1
#define SYMBOL  2
#define HOTKEY  3
#define MSE     4

#define AS(keycode) &as LS(keycode) keycode

/ {
    behaviors {
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <50>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    combos {
        compatible = "zmk,combos";

        combo_rclick {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&mkp RCLK>;
        };

        combo_lclick {
            timeout-ms = <50>;
            key-positions = <15 14>;
            bindings = <&mkp LCLK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            bindings = <
&lt 2 ESC               &as LS(Q) Q  &as LS(W) W   &as LS(E) E              &as LS(R) R  &as LS(T) T  &as LS(Y) Y  &as LS(U) U  &as LS(I) I           &as LS(O) O            &as LS(P) P                  &lt 2 BACKSPACE
&mt LEFT_SHIFT TAB      &as LS(A) A  &as LS(S) S   &as LS(D) D              &as LS(F) F  &as LS(G) G  &as LS(H) H  &as LS(J) J  &as LS(K) K           &as LS(L) L            &as LS(SEMICOLON) SEMICOLON  &mt RIGHT_SHIFT ENTER
&mt LCTRL LEFT_BRACKET  &as LS(Z) Z  &as LS(X) X   &as LS(C) C              &as LS(V) V  &as LS(B) B  &as LS(N) N  &as LS(M) M  &as LS(COMMA) COMMA   &as LS(PERIOD) PERIOD  &as LS(SLASH) SLASH          &mt RCTRL RIGHT_BRACKET
                                     &kp LEFT_ALT  &mt LEFT_GUI LA(INSERT)  &lt 1 SPACE  &lt 2 ENTER  &none        &none        &mt RIGHT_GUI DELETE  &kp RIGHT_ALT
                                     &mkp RCLK     &kp RC(V)                &mkp RCLK    &kp RC(C)    &none        &none        &none                 &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp RA(TAB) RA(RS(TAB))>;

            trackball-bindings = <&tmv>;
        };

        non-alpha {
            label = "NonAlpha";
            bindings = <
&kp GRAVE       &as EXCLAMATION NUMBER_1  &as AT_SIGN N2  &as HASH N3   &as DOLLAR N4   &as PERCENT N5    &as CARET N6       &as AMPERSAND N7  &as ASTERISK N8  &as LEFT_PARENTHESIS N9  &as RIGHT_PARENTHESIS N0  &kp TILDE
&sk LEFT_SHIFT  &kp EXCLAMATION           &kp AT_SIGN     &kp HASH      &kp DOLLAR      &kp PERCENT       &kp CARET          &kp AMPERSAND     &kp ASTERISK     &kp LEFT_PARENTHESIS     &kp RIGHT_PARENTHESIS     &sk RIGHT_SHIFT
&sk LCTRL       &kp PIPE                  &kp LEFT_BRACE  &kp MINUS     &kp UNDERSCORE  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp EQUAL         &kp PLUS         &kp RIGHT_BRACE          &kp BACKSLASH             &sk RCTRL
                                          &sk LEFT_ALT    &sk LEFT_GUI  &none           &none             &none              &none             &sk RIGHT_GUI    &sk RIGHT_ALT
                                          &trans          &none         &none           &none             &none              &none             &none            &none
            >;

            trackball-bindings = <&tmv_fine>;
            sensor-bindings =
                <&inc_dec_kp A B>,
                <&inc_dec_kp LG(LC(RIGHT)) LG(LC(LEFT))>;
        };

        Movement {
            label = "Movement";
            bindings = <
&none           &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp K_MUTE  &kp L              &kp D          &kp U          &kp R                &kp PAUSE_BREAK  &none
&kp LEFT_SHIFT  &kp F1                &kp F2                &kp F3             &kp F4           &kp F5      &as LC(LEFT) LEFT  &kp DOWN       &kp UP         &as LC(RIGHT) RIGHT  &kp F11          &kp RIGHT_SHIFT
&kp LCTRL       &kp F6                &kp F7                &kp F8             &kp F9           &kp F10     &kp HOME           &kp PAGE_DOWN  &kp PAGE_UP    &kp END              &kp F12          &kp RCTRL
                                      &kp LEFT_ALT          &kp LEFT_GUI       &to 3            &to 4       &none              &none          &kp RIGHT_GUI  &kp RIGHT_ALT
                                      &none                 &none              &none            &none       &none              &none          &none          &none
            >;

            trackball-bindings = <&tsl>;
            sensor-bindings =
                <&inc_dec_kp A A>,
                <&inc_dec_kp LC(RIGHT) LC(LEFT)>;
        };

        NumPad {
            label = "NumPad";
            bindings = <
&kp K_CALC  &kp KP_SUBTRACT  &kp KP_N7   &kp KP_N8  &kp KP_N9   &kp KP_PLUS   &kp KP_PLUS  &kp KP_MINUS  &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp KP_EQUAL  &none
&none       &kp BACKSPACE    &kp KP_N4   &kp KP_N5  &kp KP_N6   &kp KP_ENTER  &kp LEFT     &kp UP        &kp DOWN         &kp RIGHT      &kp SPACE     &kp ENTER
&to 0       &kp KP_DIVIDE    &kp KP_N1   &kp KP_N2  &kp KP_N3   &out OUT_BLE  &kp HOME     &kp PAGE_UP   &kp PAGE_DOWN    &kp END        &none         &none
                             &kp KP_DOT  &kp KP_N0  &kp KP_DOT  &kp KP_N0     &none        &none         &none            &none
                             &none       &none      &none       &none         &none        &none         &none            &none
            >;

            trackball-bindings = <&tmv_x>;
            sensor-bindings = <&inc_dec_kp A A>, <&inc_dec_kp RIGHT LEFT>;
        };

        Configuration {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3       &bt BT_SEL 4  &bt BT_CLR
&none       &none         &none              &none             &none         &out OUT_BLE  &out OUT_BLE  &none         &none             &none              &none         &none
&to 0       &none         &none              &none             &none         &out OUT_USB  &out OUT_USB  &none         &none             &none              &none         &none
                          &ext_power EP_OFF  &ext_power EP_ON  &none         &none         &none         &none         &ext_power EP_ON  &ext_power EP_OFF
                          &none              &none             &none         &none         &none         &none         &none             &none
            >;

            label = "Configuration";
        };
    };
};
